/**
 * Grid columns. This setting is shared between
 * iotaCSS grid objects and size, pull & push
 * utilities. You can change it also locally to
 * each module.
 *
 * Type: Unitless Number / List
 */
/**
 * Global namespace for Objects, Components and
 * Utilities
 *
 * Type: String
 */
/**
 * Default gutters. This setting is shared between
 * multiple objects and utilities as the default value
 * for gutters. You can change it also locally to each
 * module.
 *
 * Type: Number / List / Map
 */
/**
 * Enables flexbox across the app. If you do not want
 * all modules to use flexbox you can keep this value
 * false and set it to true separately to each one of
 * them locally.
 *
 * Type: Boolean
 */
/**
 * Enables rtl across the app. If you enable this setting
 * the final CSS will be converted to RTL.
 *
 * Type: Boolean
 */
/**
 * Default global breakpoints map. These are the
 * default breakpoints map that will be shared across
 * all iotaCSS modules. You can change it also locally
 * to each module.
 *
 * Type: Map
 */
/**
 * Global breakpoint suffix naming setting. All breakpoint
 * specific styles have a '@breakpointName' suffix by default.
 * The \ character is used to escape the @ character.
 *
 * Type: String
 */
/**
 * Global delimiter naming setting for Size, Push and Pull
 * utilities. By default it is '/' (.u-1/2) and you can change
 * it for example to 'of' so that the generated HTML class will be
 * 'u-1of2'.
 *
 * Type: String
 */
/**
 * The base value the scale starts at.
 *
 * Number
 */
/**
 * The ratio the scale is built on
 *
 * Unitless Number
 */
/**
 * Length of scale ( right part of the decimal
 * point ) ms will be rounded to.
 *
 * Unitless Number
 */
/**
 * Global box sizing option
 *
 * Type: String
 */
/**
 * Makes all heading tags ( h1 - h6 ) to be equal
 * to your body size.  It forces you to use heading
 * tags with focus on your semantics and not on the
 * way they look.
 *
 * Type: Boolean
 */
/**
 * Enables normalize and resets for the HTML4 form
 * elements
 *
 * Type: Boolean
 */
/**
 * Enables normalize and resets for the HTML5 form
 * elements
 *
 * Type: Boolean
 */
/**
 * A modern, elegant and minimal combination of Normalize.css and
 * CSS Reset. Compatible with IE10+.
 */
/**
 * 1. Sets box-sizing to border-box by default.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 * 3. Makes font thinkness to look the same in Firefox and Webkit.
 */
html {
  box-sizing: border-box;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -webkit-font-smoothing: antialiased;
  /* 3 */
  -moz-osx-font-smoothing: grayscale;
  /* 3 */ }

/**
 * Simple reset of element margin and padding
 */
body,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre, code,
dl, dd, ol, ul,
figure,
hr,
fieldset, legend {
  margin: 0;
  padding: 0; }

/**
 * Sets box-sizing to all elements and before / after
 */
*, *:before, *:after {
  box-sizing: inherit; }

/**
 * Fixes the issues of main HTML5 tag with even earlier versions of IE.
 * For IE9-, please use HTML5Shiv https://github.com/aFarkas/html5shiv.
 */
main {
  display: block; }

/**
 * Sets heading font-size to be equal to the content font-size. Encourages
 * the use of different heading elements to define the position of the heading
 * in the document and not the heading look.

 * Opinionated and disabled by default.
 */
/**
 * Applies a bold font weight to strong instead of the default bolder
 */
strong {
  font-weight: bold; }

/**
 * Removes default border spacing and collapse
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * 1. Removes border from images inside links
 * 2. Helps images to properly behave in responsive layouts
 */
img {
  border-style: none;
  /* 1 */
  max-width: 100%;
  /* 2 */
  height: auto;
  /* 2 */
  vertical-align: middle;
  /* 2 */ }

/**
 * 1. Removes default grey background in IE10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Allows you to change the default container name
 * from .o-container.
 *
 * Type: String
 */
/**
 * Allows you to specify the default set of padding
 * left and right of your container. You can use a
 * map in case you would like to specify responsive
 * gutter sizes.
 *
 * Type: Number / List / Map
 */
/**
 * Allows you to specify more sets of padding left and
 * right of your container. You can use a nested map in
 * case you would like to specify responsive gutter sizes.
 *
 * Type: Map
 */
/**
 * Allows you to specify the default max-width of your
 * container. You can use a map in case you would like
 * to specify a responsive size.
 *
 * Type: String / Map
 */
/**
 * Allows you to specify more sets of max-width for your
 * container. You can use a nested map in case you would
 * like to specify a responsive size.
 *
 * Type: Map
 */
.o-container {
  margin-right: auto;
  margin-left: auto;
  padding-right: 20px;
  padding-left: 20px;
  max-width: 1000px; }

.o-container--zero {
  padding-right: 0px;
  padding-left: 0px; }

.o-container--narrow {
  max-width: 720px; }

.o-container--wide {
  max-width: 1200px; }

.o-container--centered {
  text-align: center; }

/**
 * Enable / Disable aligment modifiers.
 * .o-grid--right : Align columns on right horizontally
 * .o-grid--center : Align columns on center horizontally
 * .o-grid--middle : Align columns on middle vertically
 * .o-grid--bottom : Align columns on bottom vertically
 *
 * Type: Boolean
 */
/**
 * Enable / Disable reversed modifier
 * .o-grid--rev : Reverse columns order
 *
 * Type: Boolean
 */
/**
 * Default gutter size. Use a number for a single size or
 * a map for a responsive size.
 *
 * Type: Number / Map
 */
/**
 * Extra gutters map. Each gutter size will be available as a
 * modifier that will be named according to the gutter name.
 * Each gutter size will be available as a modifier that will
 * be named according to the gutter name.
 * E.g. If $iota-objs-grid-gutter-extra: ('compact': '10px');
 * then .o-grid--compact will be available for use.
 *
 * Type: Map
 */
/**
 * Enable / Disable flexbox on grid.
 *
 * Type: Boolean
 */
/**
 * Enable / Disable equal height modifier .o-grid--equal-height.
 * Works only if $iota-obj-grid-flex is enabled.
 *
 * Type: Boolean
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.o-grid {
  margin-left: -20px;
  list-style: none;
  box-sizing: border-box; }
  .o-grid > .o-grid__col {
    padding-left: 20px;
    width: 100%;
    box-sizing: inherit; }

.o-grid--wide {
  margin-left: -64px; }
  .o-grid--wide > .o-grid__col {
    padding-left: 64px; }

.o-grid {
  display: flex;
  flex-flow: row wrap; }
  .o-grid > .o-grid__col {
    box-sizing: inherit;
    flex-basis: auto;
    min-width: 0; }

.o-grid--rev {
  flex-direction: row-reverse; }

.o-grid--equal-height > .o-grid__col {
  display: flex; }

.o-grid--cards > .o-grid__col + .o-grid__col {
  margin-bottom: 64px; }

/**
 * Enable / Disable block modifier. .o-list--block : Each list
 * item will have display block with a bottom margin.
 *
 * Type: Boolean
 */
/**
 * Enable / Disable inline modifier. .o-list--inline Each list
 * item will have display inline-block with a right margin.
 *
 * Type: Boolean
 */
/**
 * Enable / Disable span modifier. .o-list--span : Each list
 * item will have display table-cell with a border spacing so
 * that they never wrap to a new row.
 *
 * Type: Boolean
 */
/**
 * Default gutter size. Use a number for a single size or
 * a map for a responsive size.
 *
 * Type: Number / Map
 */
/**
 * Extra gutters map. Each gutter size will be available
 * as a modifier that will be named according to the gutter
 * name. E.g. If $iota-objs-list-gutter-extra: ('compact': '10px');
 * then .o-list--compact will be available for use.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.o-list {
  margin: 0;
  padding: 0;
  list-style: none; }
  .o-list > .o-list__item {
    vertical-align: top; }

.o-list--inline > .o-list__item {
  display: inline-block; }

.o-list--inline > .o-list__item:not(:last-child) {
  margin-right: 20px; }

.o-list--wide.o-list--inline > .o-list__item:not(:last-child) {
  margin-right: 64px; }

/**
 * Enable / Disable aligment modifiers.
 * .o-media--middle Align columns at middle vertically
 * .o-media--bottom Align columns at bottom vertically.
 *
 * Type: Boolean
 */
/**
 * Enable / Disable reversed modifier
 * .o-media--rev Reverse columns order
 *
 * Type: Boolean
 */
/**
 * Default gutter size. Use a number for a single size or
 * a map for a responsive size.
 *
 * Type: Number / Map
 */
/**
 * Extra gutters map. Each gutter size will be available as
 * a modifier that will be named according to the gutter name.
 * Use a map for a single size or a nested map for a responsive
 * size. E.g. If $iota-objs-media-gutter-extra: ('compact': '10px');
 * then .o-media--compact will be available for use.
 *
 * Type: Map
 */
/**
 * Enable / Disable flexbox
 *
 * Type: Boolean
 */
/**
 * Enable / Disable responsive modifier.
 * .o-media--res Collapse fluid section bellow fixed one,
 * at a specific max-width breakpoint.
 *
 * Type: Boolean
 */
/**
 * Specify max-width for breakpoint to collapse at.
 *
 * Type: Number
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.o-media {
  display: flex;
  align-items: flex-start; }
  .o-media > .o-media__fixed {
    padding-right: 20px; }
  .o-media > .o-media__fluid {
    flex: 1; }

/**
 * Allows you to change the default type name from .o-type-.
 *
 * Type: String
 */
/**
 * Allows you to specify typography sizes.
 *
 * Type: Map
 */
.o-type-promo {
  font-size: 80px;
  line-height: 60px; }

.o-type-big-quote {
  font-size: 35px;
  line-height: 50px; }

.o-type-display-2 {
  font-size: 45px;
  line-height: 60px; }

.o-type-display-1 {
  font-size: 35px;
  line-height: 50px; }

.o-type-lead {
  font-size: 20px;
  line-height: 36px; }

.o-type-title {
  font-size: 24px;
  line-height: 32px; }

.o-type-headline {
  font-size: 20px;
  line-height: 32px; }

.o-type-body-2 {
  font-size: 18px;
  line-height: 32px; }

.o-type-small {
  font-size: 14px;
  line-height: 16px; }

body {
  font-family: "nimbus-sans", sans-serif; }

.o-type-italic {
  font-family: "pt-serif-caption",serif;
  font-style: italic; }

.o-page-content > * + * {
  margin-top: 0.5rem; }

.o-page-content > * + h3 {
  margin-top: 2rem; }

.o-page-content > * + h4 {
  margin-top: 2.5rem; }

.o-page-content > p + p {
  margin-top: 1rem; }

.o-page-header {
  background: #6a3093;
  /* fallback for old browsers */
  background: -webkit-linear-gradient(to right, #a044ff, #6a3093);
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #a044ff, #6a3093);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }
  .o-page-header .o-type-promo {
    color: #f8f9fa; }
  .o-page-header .o-type-lead {
    color: #e9ecef; }

.c-avatar {
  overflow: hidden;
  border-radius: 100px;
  display: block;
  max-width: 64px; }

.c-button {
  display: inline-block;
  margin: 0;
  padding: 20px;
  font: inherit;
  color: white;
  white-space: nowrap;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: none;
  text-decoration: none;
  background: #39b2ff; }

.c-button--primary {
  border-radius: 4px; }

.c-card {
  border-radius: 6px;
  border: 1px solid #dee2e6;
  display: flex;
  flex-direction: column; }

.c-label {
  letter-spacing: 1px;
  background: rgba(255, 255, 255, 0.12);
  padding: 4px 8px;
  display: inline-block;
  border-radius: 3px;
  font-weight: 500;
  color: #fff; }

.c-page-header {
  height: 500px; }

.c-persona-card {
  position: relative; }
  .c-persona-card .c-avatar {
    position: absolute;
    top: 32px;
    right: 32px; }

.c-main-footer {
  background-color: #212529;
  color: #868e96;
  display: flex;
  justify-content: space-between;
  align-items: baseline; }
  .c-main-footer a {
    color: #adb5bd;
    text-decoration: none; }
    .c-main-footer a:hover {
      color: #f8f9fa; }

.o-main-navigation {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  background-color: transparent;
  z-index: 10; }
  .o-main-navigation a {
    color: inherit;
    text-decoration: none; }

.o-main-navigation--inverse {
  color: rgba(255, 255, 255, 0.8); }
  .o-main-navigation--inverse a:hover {
    color: white; }

.c-quote {
  text-align: center; }

/**
 * Enable / Disable breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Override breakpoints map only for align utility
 *
 * Type: Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-aligntop {
  vertical-align: top !important; }

.u-alignbottom {
  vertical-align: bottom !important; }

.u-alignmiddle {
  vertical-align: middle !important; }

.u-alignbaseline {
  vertical-align: baseline !important; }

@media screen and (min-width: 768px) {
  .u-aligntop\@sm {
    vertical-align: top !important; }
  .u-alignbottom\@sm {
    vertical-align: bottom !important; }
  .u-alignmiddle\@sm {
    vertical-align: middle !important; }
  .u-alignbaseline\@sm {
    vertical-align: baseline !important; } }

@media screen and (min-width: 1000px) {
  .u-aligntop\@md {
    vertical-align: top !important; }
  .u-alignbottom\@md {
    vertical-align: bottom !important; }
  .u-alignmiddle\@md {
    vertical-align: middle !important; }
  .u-alignbaseline\@md {
    vertical-align: baseline !important; } }

.u-angled--bottom {
  position: relative;
  z-index: 1; }
  .u-angled--bottom:after {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--bottom:after {
    bottom: 0;
    transform: skewY(-6deg);
    transform-origin: 100%; }

.u-angled--bottom--reverse {
  position: relative;
  z-index: 1; }
  .u-angled--bottom--reverse:after {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--bottom--reverse:after {
    bottom: 0;
    transform: skewY(6deg);
    transform-origin: 0 100%; }

.u-angled--top {
  position: relative;
  z-index: 1; }
  .u-angled--top:before {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--top:before {
    top: 0;
    transform: skewY(6deg);
    transform-origin: 100% 0; }

.u-angled--top--reverse {
  position: relative;
  z-index: 1; }
  .u-angled--top--reverse:before {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--top--reverse:before {
    top: 0;
    transform: skewY(-6deg);
    transform-origin: 0 0; }

.u-angled--both {
  position: relative;
  z-index: 1; }
  .u-angled--both:before, .u-angled--both:after {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--both:before {
    top: 0;
    transform: skewY(6deg);
    transform-origin: 100% 0; }
  .u-angled--both:after {
    bottom: 0;
    transform: skewY(-6deg);
    transform-origin: 100%; }

.u-angled--both--reverse {
  position: relative;
  z-index: 1; }
  .u-angled--both--reverse:before, .u-angled--both--reverse:after {
    background: inherit;
    content: '';
    display: block;
    height: 50%;
    left: 0;
    position: absolute;
    right: 0;
    z-index: -1;
    -webkit-backface-visibility: hidden; }
  .u-angled--both--reverse:before {
    top: 0;
    transform: skewY(-6deg);
    transform-origin: 0 0; }
  .u-angled--both--reverse:after {
    bottom: 0;
    transform: skewY(6deg);
    transform-origin: 0 0; }

/**
 * Background color names
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-bgcolor-white {
  background-color: #ffffff !important; }

.u-bgcolor-tango {
  background-color: #ef5231 !important; }

.u-bgcolor-gray-0 {
  background-color: #f8f9fa !important; }

.u-bgcolor-gray-1 {
  background-color: #f1f3f5 !important; }

.u-bgcolor-gray-2 {
  background-color: #e9ecef !important; }

.u-bgcolor-gray-3 {
  background-color: #dee2e6 !important; }

.u-bgcolor-gray-4 {
  background-color: #ced4da !important; }

.u-bgcolor-gray-5 {
  background-color: #adb5bd !important; }

.u-bgcolor-gray-6 {
  background-color: #868e96 !important; }

.u-bgcolor-gray-7 {
  background-color: #495057 !important; }

.u-bgcolor-gray-9 {
  background-color: #212529 !important; }

/**
 * Namespace classes
 *
 * Type: String
 */
.u-cf:after {
  content: "";
  display: table;
  clear: both; }

/**
 * Color names
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-color-body-1 {
  color: #495057 !important; }

.u-color-body-2 {
  color: #868e96 !important; }

.u-color-display {
  color: #343a40 !important; }

.u-color-title {
  color: #343a40 !important; }

.u-color-headline {
  color: #343a40 !important; }

.u-color-menu {
  color: #495057 !important; }

.u-color-button {
  color: #495057 !important; }

.u-color-caption {
  color: #495057 !important; }

.u-color-quote {
  color: #868e96 !important; }

.u-color-gray-0 {
  color: #f8f9fa !important; }

.u-color-gray-1 {
  color: #f1f3f5 !important; }

.u-color-gray-2 {
  color: #e9ecef !important; }

.u-color-gray-3 {
  color: #dee2e6 !important; }

.u-color-gray-4 {
  color: #ced4da !important; }

.u-color-gray-5 {
  color: #adb5bd !important; }

.u-color-gray-6 {
  color: #868e96 !important; }

.u-color-gray-7 {
  color: #495057 !important; }

.u-color-gray-8 {
  color: #343a40 !important; }

.u-color-gray-9 {
  color: #212529 !important; }

/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for display utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-flex {
  display: flex !important; }

.u-block {
  display: block !important; }

.u-hidden {
  display: none !important; }

.u-inline {
  display: inline !important; }

.u-inline-block {
  display: inline-block !important; }

/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for float utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-float-left- {
  float: left !important; }

.u-float-right- {
  float: right !important; }

/**
 * Margin default gutter. Use a number for a simple size
 * and a map for responsive.
 *
 * Type: Number / Map
 */
/**
 * Margin extra gutters.
 *
 * Type: Map
 */
/**
 * Enables / Disables responsive classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for margin utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-m {
  margin: 20px !important; }

.u-mt {
  margin-top: 20px !important; }

.u-mr {
  margin-right: 20px !important; }

.u-mb {
  margin-bottom: 20px !important; }

.u-ml {
  margin-left: 20px !important; }

.u-mv {
  margin-top: 20px !important;
  margin-bottom: 20px !important; }

.u-mh {
  margin-right: 20px !important;
  margin-left: 20px !important; }

.u-m-xsmall {
  margin: 8px !important; }

.u-mt-xsmall {
  margin-top: 8px !important; }

.u-mr-xsmall {
  margin-right: 8px !important; }

.u-mb-xsmall {
  margin-bottom: 8px !important; }

.u-ml-xsmall {
  margin-left: 8px !important; }

.u-mv-xsmall {
  margin-top: 8px !important;
  margin-bottom: 8px !important; }

.u-mh-xsmall {
  margin-right: 8px !important;
  margin-left: 8px !important; }

.u-m-small {
  margin: 16px !important; }

.u-mt-small {
  margin-top: 16px !important; }

.u-mr-small {
  margin-right: 16px !important; }

.u-mb-small {
  margin-bottom: 16px !important; }

.u-ml-small {
  margin-left: 16px !important; }

.u-mv-small {
  margin-top: 16px !important;
  margin-bottom: 16px !important; }

.u-mh-small {
  margin-right: 16px !important;
  margin-left: 16px !important; }

.u-m-medium {
  margin: 32px !important; }

.u-mt-medium {
  margin-top: 32px !important; }

.u-mr-medium {
  margin-right: 32px !important; }

.u-mb-medium {
  margin-bottom: 32px !important; }

.u-ml-medium {
  margin-left: 32px !important; }

.u-mv-medium {
  margin-top: 32px !important;
  margin-bottom: 32px !important; }

.u-mh-medium {
  margin-right: 32px !important;
  margin-left: 32px !important; }

.u-m-large {
  margin: 48px !important; }

.u-mt-large {
  margin-top: 48px !important; }

.u-mr-large {
  margin-right: 48px !important; }

.u-mb-large {
  margin-bottom: 48px !important; }

.u-ml-large {
  margin-left: 48px !important; }

.u-mv-large {
  margin-top: 48px !important;
  margin-bottom: 48px !important; }

.u-mh-large {
  margin-right: 48px !important;
  margin-left: 48px !important; }

.u-m-mega {
  margin: 144px !important; }

.u-mt-mega {
  margin-top: 144px !important; }

.u-mr-mega {
  margin-right: 144px !important; }

.u-mb-mega {
  margin-bottom: 144px !important; }

.u-ml-mega {
  margin-left: 144px !important; }

.u-mv-mega {
  margin-top: 144px !important;
  margin-bottom: 144px !important; }

.u-mh-mega {
  margin-right: 144px !important;
  margin-left: 144px !important; }

/**
 * Opacity sizes
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
/**
 * Padding default gutter. Use a number for a simple size
 * and a map for responsive.
 *
 * Type: Number / Map
 */
/**
 * Padding extra gutters.
 *
 * Type: Map
 */
/**
 * Enables / Disables responsive classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for padding utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-p {
  padding: 20px !important; }

.u-pt {
  padding-top: 20px !important; }

.u-pr {
  padding-right: 20px !important; }

.u-pb {
  padding-bottom: 20px !important; }

.u-pl {
  padding-left: 20px !important; }

.u-pv {
  padding-top: 20px !important;
  padding-bottom: 20px !important; }

.u-ph {
  padding-right: 20px !important;
  padding-left: 20px !important; }

.u-p-xsmall {
  padding: 8px !important; }

.u-pt-xsmall {
  padding-top: 8px !important; }

.u-pr-xsmall {
  padding-right: 8px !important; }

.u-pb-xsmall {
  padding-bottom: 8px !important; }

.u-pl-xsmall {
  padding-left: 8px !important; }

.u-pv-xsmall {
  padding-top: 8px !important;
  padding-bottom: 8px !important; }

.u-ph-xsmall {
  padding-right: 8px !important;
  padding-left: 8px !important; }

.u-p-small {
  padding: 16px !important; }

.u-pt-small {
  padding-top: 16px !important; }

.u-pr-small {
  padding-right: 16px !important; }

.u-pb-small {
  padding-bottom: 16px !important; }

.u-pl-small {
  padding-left: 16px !important; }

.u-pv-small {
  padding-top: 16px !important;
  padding-bottom: 16px !important; }

.u-ph-small {
  padding-right: 16px !important;
  padding-left: 16px !important; }

.u-p-medium {
  padding: 32px !important; }

.u-pt-medium {
  padding-top: 32px !important; }

.u-pr-medium {
  padding-right: 32px !important; }

.u-pb-medium {
  padding-bottom: 32px !important; }

.u-pl-medium {
  padding-left: 32px !important; }

.u-pv-medium {
  padding-top: 32px !important;
  padding-bottom: 32px !important; }

.u-ph-medium {
  padding-right: 32px !important;
  padding-left: 32px !important; }

.u-p-large {
  padding: 64px !important; }

.u-pt-large {
  padding-top: 64px !important; }

.u-pr-large {
  padding-right: 64px !important; }

.u-pb-large {
  padding-bottom: 64px !important; }

.u-pl-large {
  padding-left: 64px !important; }

.u-pv-large {
  padding-top: 64px !important;
  padding-bottom: 64px !important; }

.u-ph-large {
  padding-right: 64px !important;
  padding-left: 64px !important; }

.u-p-mega {
  padding: 144px !important; }

.u-pt-mega {
  padding-top: 144px !important; }

.u-pr-mega {
  padding-right: 144px !important; }

.u-pb-mega {
  padding-bottom: 144px !important; }

.u-pl-mega {
  padding-left: 144px !important; }

.u-pv-mega {
  padding-top: 144px !important;
  padding-bottom: 144px !important; }

.u-ph-mega {
  padding-right: 144px !important;
  padding-left: 144px !important; }

.u-p-ultra {
  padding: 200px !important; }

.u-pt-ultra {
  padding-top: 200px !important; }

.u-pr-ultra {
  padding-right: 200px !important; }

.u-pb-ultra {
  padding-bottom: 200px !important; }

.u-pl-ultra {
  padding-left: 200px !important; }

.u-pv-ultra {
  padding-top: 200px !important;
  padding-bottom: 200px !important; }

.u-ph-ultra {
  padding-right: 200px !important;
  padding-left: 200px !important; }

/**
 * Enable / Disable breakpoint specific classes
 * 
 * Type: Boolean
 */
/**
 * Overrides breakpoints map only for position utility
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-absolute {
  position: absolute !important; }

.u-fixed {
  position: fixed !important; }

.u-relative {
  position: relative !important; }

.u-static {
  position: static !important; }

/**
 * Namespace classes
 *
 * Type: String
 */
/**
 * Size delimiter. Defaults to \/. Ex: .u-pull-1/3
 *
 * Type: String
 */
/**
 * Columns to populate pull utility for
 *
 * Type: Unitless Number / List
 */
/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Allows you to create breakpoints only
 * for the pull responsive utility.
 *
 * Type: Map
 */
.u-pull-1\/1 {
  margin-right: 100% !important; }

.u-pull-0\/1 {
  margin-right: 0 !important; }

.u-pull-1\/2 {
  margin-right: 50% !important; }

.u-pull-1\/3 {
  margin-right: 33.33333% !important; }

.u-pull-2\/3 {
  margin-right: 66.66667% !important; }

.u-pull-1\/4 {
  margin-right: 25% !important; }

.u-pull-2\/4 {
  margin-right: 50% !important; }

.u-pull-3\/4 {
  margin-right: 75% !important; }

@media screen and (min-width: 768px) {
  .u-pull-1\/1\@sm {
    margin-right: 100% !important; }
  .u-pull-0\/1\@sm {
    margin-right: 0 !important; }
  .u-pull-1\/2\@sm {
    margin-right: 50% !important; }
  .u-pull-1\/3\@sm {
    margin-right: 33.33333% !important; }
  .u-pull-2\/3\@sm {
    margin-right: 66.66667% !important; }
  .u-pull-1\/4\@sm {
    margin-right: 25% !important; }
  .u-pull-2\/4\@sm {
    margin-right: 50% !important; }
  .u-pull-3\/4\@sm {
    margin-right: 75% !important; } }

@media screen and (min-width: 1000px) {
  .u-pull-1\/1\@md {
    margin-right: 100% !important; }
  .u-pull-0\/1\@md {
    margin-right: 0 !important; }
  .u-pull-1\/2\@md {
    margin-right: 50% !important; }
  .u-pull-1\/3\@md {
    margin-right: 33.33333% !important; }
  .u-pull-2\/3\@md {
    margin-right: 66.66667% !important; }
  .u-pull-1\/4\@md {
    margin-right: 25% !important; }
  .u-pull-2\/4\@md {
    margin-right: 50% !important; }
  .u-pull-3\/4\@md {
    margin-right: 75% !important; } }

/**
 * Namespace classes
 *
 * Type: String
 */
/**
 * Size delimiter. Defaults to \/. Ex: .u-push-1/3
 *
 * Type: String
 */
/**
 * Columns to populate push utility for
 *
 * Type: Unitless Number / List
 */
/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Allows you to create breakpoints only
 * for the push responsive utility.
 *
 * Type: Map
 */
.u-push-1\/1 {
  margin-left: 100% !important; }

.u-push-0\/1 {
  margin-left: 0 !important; }

.u-push-1\/2 {
  margin-left: 50% !important; }

.u-push-1\/3 {
  margin-left: 33.33333% !important; }

.u-push-2\/3 {
  margin-left: 66.66667% !important; }

.u-push-1\/4 {
  margin-left: 25% !important; }

.u-push-2\/4 {
  margin-left: 50% !important; }

.u-push-3\/4 {
  margin-left: 75% !important; }

@media screen and (min-width: 768px) {
  .u-push-1\/1\@sm {
    margin-left: 100% !important; }
  .u-push-0\/1\@sm {
    margin-left: 0 !important; }
  .u-push-1\/2\@sm {
    margin-left: 50% !important; }
  .u-push-1\/3\@sm {
    margin-left: 33.33333% !important; }
  .u-push-2\/3\@sm {
    margin-left: 66.66667% !important; }
  .u-push-1\/4\@sm {
    margin-left: 25% !important; }
  .u-push-2\/4\@sm {
    margin-left: 50% !important; }
  .u-push-3\/4\@sm {
    margin-left: 75% !important; } }

@media screen and (min-width: 1000px) {
  .u-push-1\/1\@md {
    margin-left: 100% !important; }
  .u-push-0\/1\@md {
    margin-left: 0 !important; }
  .u-push-1\/2\@md {
    margin-left: 50% !important; }
  .u-push-1\/3\@md {
    margin-left: 33.33333% !important; }
  .u-push-2\/3\@md {
    margin-left: 66.66667% !important; }
  .u-push-1\/4\@md {
    margin-left: 25% !important; }
  .u-push-2\/4\@md {
    margin-left: 50% !important; }
  .u-push-3\/4\@md {
    margin-left: 75% !important; } }

/**
 * Size utility delimiter. Default to \/. Ex: .u-1/3.
 *
 * Type: String
 */
/**
 * Size utility columns list
 *
 * Type: List
 */
/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for margin utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-1\/1 {
  width: 100% !important; }

.u-1\/2 {
  width: 50% !important; }

.u-2\/2 {
  width: 100% !important; }

.u-1\/3 {
  width: 33.33333% !important; }

.u-2\/3 {
  width: 66.66667% !important; }

.u-3\/3 {
  width: 100% !important; }

.u-1\/4 {
  width: 25% !important; }

.u-2\/4 {
  width: 50% !important; }

.u-3\/4 {
  width: 75% !important; }

.u-4\/4 {
  width: 100% !important; }

@media screen and (min-width: 768px) {
  .u-1\/1\@sm {
    width: 100% !important; }
  .u-1\/2\@sm {
    width: 50% !important; }
  .u-2\/2\@sm {
    width: 100% !important; }
  .u-1\/3\@sm {
    width: 33.33333% !important; }
  .u-2\/3\@sm {
    width: 66.66667% !important; }
  .u-3\/3\@sm {
    width: 100% !important; }
  .u-1\/4\@sm {
    width: 25% !important; }
  .u-2\/4\@sm {
    width: 50% !important; }
  .u-3\/4\@sm {
    width: 75% !important; }
  .u-4\/4\@sm {
    width: 100% !important; } }

@media screen and (min-width: 1000px) {
  .u-1\/1\@md {
    width: 100% !important; }
  .u-1\/2\@md {
    width: 50% !important; }
  .u-2\/2\@md {
    width: 100% !important; }
  .u-1\/3\@md {
    width: 33.33333% !important; }
  .u-2\/3\@md {
    width: 66.66667% !important; }
  .u-3\/3\@md {
    width: 100% !important; }
  .u-1\/4\@md {
    width: 25% !important; }
  .u-2\/4\@md {
    width: 50% !important; }
  .u-3\/4\@md {
    width: 75% !important; }
  .u-4\/4\@md {
    width: 100% !important; } }

/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Overrides breakpoints map only for position utility
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-text-left {
  text-align: left !important; }

.u-text-right {
  text-align: right !important; }

.u-text-center {
  text-align: center !important; }

@media screen and (min-width: 768px) {
  .u-text-left\@sm {
    text-align: left !important; }
  .u-text-right\@sm {
    text-align: right !important; }
  .u-text-center\@sm {
    text-align: center !important; } }

@media screen and (min-width: 1000px) {
  .u-text-left\@md {
    text-align: left !important; }
  .u-text-right\@md {
    text-align: right !important; }
  .u-text-center\@md {
    text-align: center !important; } }

/**
 * Enables / Disables breakpoint specific classes
 *
 * Type: Boolean
 */
/**
 * Breakpoints map. Overrides the breakpoints map only
 * for margin utility.
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-capitalize {
  text-transform: capitalize !important; }

.u-uppercase {
  text-transform: uppercase !important; }

.u-lowercase {
  text-transform: lowercase !important; }

/**
 * Weight sizes
 *
 * Type: Map
 */
/**
 * Namespace classes
 *
 * Type: String
 */
.u-weight-light {
  font-weight: 400 !important; }

.u-weight-normal {
  font-weight: normal !important; }

.u-weight-medium {
  font-weight: 600 !important; }
